stages:
  - test
  - build
  - deploy


variables:
  REPO_NAME: gitlab.com/NorwegianLanguageLearning/heimdallr
  GOPATH: ${CI_PROJECT_DIR}/vendor/go
  GO111MODULE: "on"

include:
  - template: SAST.gitlab-ci.yml
  - template: License-Management.gitlab-ci.yml
  - template: Code-Quality.gitlab-ci.yml


.go_job_template: &go_job_definition
  image: golang:stretch
  before_script:
    - go get
  cache:
    paths:
      - vendor/go/pkg/mod

go_fmt:
  stage: test
  <<: *go_job_definition
  script:
    - test -z $(go fmt $(go list ./... | grep -v /vendor/))

go_vet:
  stage: test
  <<: *go_job_definition
  script:
    - go vet $(go list ./... | grep -v /vendor/)

golint:
  stage: test
  allow_failure: true
  <<: *go_job_definition
  script:
    - go get golang.org/x/lint/golint
    - $GOPATH/bin/golint -set_exit_status $(go list ./... | grep -v /vendor/)
  cache:
    key: golint
    paths:
      - vendor/go/pkg/mod

go_test:
  stage: test
  <<: *go_job_definition
  script:
    - go get github.com/jstemmer/go-junit-report
    - go test -v $(go list ./... | grep -v /vendor/) 2>&1 | $GOPATH/bin/go-junit-report > report.xml
  cache:
    key: go-junit-report
    paths:
      - vendor/go/pkg/mod
  artifacts:
    reports:
      junit: report.xml

build:
  stage: build
  image: golang:latest
  <<: *go_job_definition
  script:
    - go build -ldflags "-X gitlab.com/NorwegianLanguageLearning/heimdallr/heimdallr/version.VERSION=$(git tag --points-at HEAD) -X gitlab.com/NorwegianLanguageLearning/heimdallr/heimdallr/version.COMMIT=$(git rev-parse --short HEAD)"
  artifacts:
    paths:
      - heimdallr

.deploy_job_template: &deploy_job_definition
  stage: deploy
  image: williamyeh/ansible:debian9
  script:
    - echo "$DEPLOYMENT_SSH_KEY" > ansible/ssh.key
    - chmod 700 ansible/ssh.key
    - mkdir -p ~/.ssh
    - echo "$DEPLOYMENT_SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - echo "$DEPLOYMENT_HOST ansible_port=$DEPLOYMENT_PORT ansible_user=$DEPLOYMENT_USER ansible_ssh_private_key_file=ansible/ssh.key ansible_python_interpreter=/usr/bin/python3" > ansible/hosts
    - ansible-playbook --inventory ansible/hosts --extra-vars "DISCORD_TOKEN=$DISCORD_TOKEN ENVIRONMENT=$ENVIRONMENT" ansible/deploy.yml

deploy:staging:
  <<: *deploy_job_definition
  variables:
    DISCORD_TOKEN: $DISCORD_TOKEN_STAGING
    ENVIRONMENT: "staging"
  only:
    - master

deploy:production:
  <<: *deploy_job_definition
  variables:
    DISCORD_TOKEN: $DISCORD_TOKEN_PRODUCTION
    ENVIRONMENT: "production"
  only:
    - master
  when: manual
